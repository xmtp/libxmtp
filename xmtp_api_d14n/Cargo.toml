[package]
name = "xmtp_api_d14n"
edition = "2024"
license.workspace = true
version.workspace = true

[lints]
workspace = true

[dependencies]
async-trait.workspace = true
chrono.workspace = true
ctor.workspace = true
derive_builder.workspace = true
futures.workspace = true
hex.workspace = true
hyper = { version = "1.7", default-features = false }
impl-trait-for-tuples = "0.2"
itertools.workspace = true
once_cell.workspace = true
openmls_rust_crypto = { workspace = true }
parking_lot.workspace = true
pin-project-lite = { workspace = true }
prost.workspace = true
prost-types.workspace = true
thiserror.workspace = true
tracing.workspace = true
xmtp_api_grpc.workspace = true
xmtp_common.workspace = true
xmtp_configuration = { workspace = true }

xmtp_cryptography.workspace = true
xmtp_proto = { workspace = true, features = ["convert"] }

# Optional
mockall = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
openmls = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
openmls = { workspace = true, features = ["js"] }


[dev-dependencies]
hex.workspace = true
mockall.workspace = true
tokio.workspace = true
wasm-bindgen-test.workspace = true
xmtp_api_grpc = { workspace = true, features = ["test-utils"] }
xmtp_common = { workspace = true, features = ["test-utils"] }
xmtp_proto = { workspace = true, features = ["convert", "test-utils"] }

[features]
test-utils = ["xmtp_api_grpc/test-utils", "dep:mockall"]
v3 = []
d14n = []
dev = ["xmtp_configuration/dev", "xmtp_proto/dev"]
