#!/bin/bash
set -eou pipefail

RED='\033[0;31m'
GREEN='\033[0;32m'
WHITE='\033[0;97m'

NC='\033[0m' # No Color

XMTP_ANDROID="${1:-$(realpath ../xmtp-android)}"
if [ ! -d $XMTP_ANDROID ]; then
  echo -e "${RED}xmtp-android directory not detected${NC}"
  echo -e "${RED}Ensure directory exists.${NC}"
  echo -e "${RED}Ensure \`github.com/xmtp/xmtp_android\` is cloned as a sibling directory or passed as the first argument to this script.${NC}"
  exit
fi
echo -e "${GREEN}Android Directory:${NC} $XMTP_ANDROID"

# Local script to release android jniLibs with same environment as CI
if [[ "${OSTYPE}" == "darwin"* ]]; then
  if ! which nix &>/dev/null; then
    echo "Nix is not installed. Please review the installation script at:"
    echo "https://install.determinate.systems/nix"
    read -p "Do you want to proceed with the installation? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
      curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install --determinate
    else
      echo "Nix installation aborted. Please install Nix manually or run commands in local environment to proceed."
      exit 1
    fi
  fi
fi

LIBRARY_NAME="libxmtpv3"
TARGET_NAME="libuniffi_xmtpv3"

nix develop . --command cargo ndk -o bindings_ffi/jniLibs/ --manifest-path ./bindings_ffi/Cargo.toml \
  -t aarch64-linux-android \
  -t x86_64-linux-android \
  -t i686-linux-android \
  -t armv7-linux-androideabi \
  -- build --release

for arch in arm64-v8a armeabi-v7a x86 x86_64; do
  mv "./bindings_ffi/jniLibs/$arch/$LIBRARY_NAME.so" "./bindings_ffi/jniLibs/$arch/$TARGET_NAME.so"
done

echo -e "${WHITE}jniLib generation successful.${NC}"

read -r -p "$(echo -e $WHITE"Delete existing jniLibs and copy new ones? [y/N] "$NC)" response
response=${response}
if [[ "$response" =~ ^(yes|y)$ ]]
then
  rm -rf $XMTP_ANDROID/library/src/main/jniLibs
  cp -r "./bindings_ffi/jniLibs" $XMTP_ANDROID/library/src/main
  echo "libs copied"
else
  echo "done"
fi
