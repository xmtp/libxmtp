name: release bindings_flutter
on:
  workflow_dispatch:
env:
  RELEASE_VERSION: '0.1.0-development.2'
  # this ^ version should be kept in sync:
  # - pubspec.yaml
  # - linux/CMakeLists.txt
  # - android/gradle.properties
  # - ios/xmtp_bindings_flutter.podspec
  # - macos/xmtp_bindings_flutter.podspec
  # TODO: automate that ^ and then also `dart pub publish` on release
  # TODO: `dart pub publish` in this workflow after creating the release
defaults:
  run:
    working-directory: ./bindings_flutter
jobs:
  build_android:
    runs-on: warp-macos-13-arm64-6x
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android,armv7-linux-androideabi,x86_64-linux-android,i686-linux-android
      - uses: Swatinem/rust-cache@v2
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.8'
          channel: 'stable'
      - run: flutter pub get
      - run: cargo install cargo-expand
      - run: cargo install flutter_rust_bridge_codegen --version 2.0.0-dev.22
      - run: flutter_rust_bridge_codegen generate
      - run: scripts/build-android.sh
      - uses: actions/upload-artifact@v4
        with:
          name: xmtp_bindings_flutter.jniLibs.tar.gz
          path: bindings_flutter/platform-build/xmtp_bindings_flutter.jniLibs.tar.gz
          retention-days: 1
  build_linux:
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu
      - uses: Swatinem/rust-cache@v2
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.8'
          channel: 'stable'
      - uses: goto-bus-stop/setup-zig@v2
      - run: flutter pub get
      - run: cargo install cargo-expand
      - run: cargo install flutter_rust_bridge_codegen --version 2.0.0-dev.22
      - run: flutter_rust_bridge_codegen generate
      - run: scripts/build-linux.sh
      - uses: actions/upload-artifact@v4
        with:
          name: xmtp_bindings_flutter.linux.tar.gz
          path: bindings_flutter/platform-build/xmtp_bindings_flutter.linux.tar.gz
          retention-days: 1
  build_apple:
    runs-on: warp-macos-13-arm64-6x
    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-ios,x86_64-apple-ios,aarch64-apple-ios-sim,aarch64-apple-darwin,x86_64-apple-darwin
      - uses: Swatinem/rust-cache@v2
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.8'
          channel: 'stable'
      - run: flutter pub get
      - run: cargo install cargo-expand
      - run: cargo install flutter_rust_bridge_codegen --version 2.0.0-dev.22
      - run: flutter_rust_bridge_codegen generate
      - run: scripts/build-apple.sh
      - uses: actions/upload-artifact@v4
        with:
          name: xmtp_bindings_flutter.xcframework.zip
          path: bindings_flutter/platform-build/xmtp_bindings_flutter.xcframework.zip
          retention-days: 1
      - uses: actions/upload-artifact@v4
        with:
          name: libxmtp_bindings_flutter.dylib
          path: bindings_flutter/platform-build/libxmtp_bindings_flutter.dylib
          retention-days: 1
  release:
    needs: [build_android, build_linux, build_apple]
    runs-on: warp-macos-13-arm64-6x
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: .
          merge-multiple: true
      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: xmtp_bindings_flutter-v${{ env.RELEASE_VERSION }}
          release_name: xmtp_bindings_flutter-v${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: true
      - name: "upload XCFrameworks for building to iOS or macOS"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: xmtp_bindings_flutter.xcframework.zip
          asset_name: xmtp_bindings_flutter.xcframework.zip
          asset_content_type: application/zip
      - name: "upload JNI libraries for building to Android"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: xmtp_bindings_flutter.jniLibs.tar.gz
          asset_name: xmtp_bindings_flutter.jniLibs.tar.gz
          asset_content_type: application/gzip
      - name: "upload .dylib for running tests on macOS"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: libxmtp_bindings_flutter.dylib
          asset_name: libxmtp_bindings_flutter.dylib
          asset_content_type: application/octet-stream
      - name: "upload .so for running tests on linux"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: xmtp_bindings_flutter.linux.tar.gz
          asset_name: xmtp_bindings_flutter.linux.tar.gz
          asset_content_type: application/gzip