name: Check iOS & Android Bindings
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - ".github/workflows/check-ios-android-bindings.yml"
      - "bindings_ffi/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - "dev/**"
      - "rust-toolchain.toml"
      - ".cargo/**"
jobs:
  check-swift:
    runs-on: warp-macos-13-arm64-6x
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@main
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: Build target
        run: |
          nix develop . --command \
            cargo check --target ${{ matrix.target }} --manifest-path bindings_ffi/Cargo.toml
  check-android:
    runs-on: warp-ubuntu-latest-x64-16x
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-linux-android
          # We can add other targets later by making a pkg derivation and configuring LD_LIBRARY_PATH
          # according to https://github.com/bburdette/tauri-zknotes/blob/7aa3495dc2c8a266d81c2fa3e51ae347e9c2597d/flake.nix#L158
          # but this is good for just checking to ensure it compiles on this target
          # Can also run android emulator here after cloning xmtp-android
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true
      - uses: DeterminateSystems/flakehub-cache-action@main
      - uses: cachix/cachix-action@v16
        with:
          name: xmtp
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: cache rust artifacts
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
      - name: check target
        run: |
          nix develop .#android --command \
            cargo check --target ${{ matrix.target }} --manifest-path bindings_ffi/Cargo.toml
