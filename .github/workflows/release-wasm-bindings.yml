name: Release WASM Bindings
on:
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
jobs:
  release:
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update rust toolchains, add target
        run: |
          rustup update
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
            bindings_wasm
      - name: Check versions are in sync
        run: |
          chmod +x dev/sync-versions.sh
          ./dev/sync-versions.sh
          
          # Check if there are any changes after syncing versions
          if [[ -n $(git status --porcelain) ]]; then
            echo "::error::Version mismatch detected! Please run 'dev/sync-versions.sh' locally, commit the changes before releasing bindings_wasm"
            echo "Changes detected:"
            git status --porcelain
            exit 1
          fi
      - name: Install wasm-bindgen
        uses: taiki-e/install-action@v2
        with:
          tool: wasm-bindgen
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache-dependency-path: "bindings_wasm/yarn.lock"
          cache: "yarn"
        env:
          SKIP_YARN_COREPACK_CHECK: "1"
      - name: Enable corepack
        run: corepack enable
      - name: Install dependencies
        working-directory: bindings_wasm
        run: |
          yarn
      - name: Install emscripten toolchains
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
      - name: Build
        working-directory: bindings_wasm
        run: |
          source ./../emsdk/emsdk_env.sh
          yarn build
      - name: Publish to NPM
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: bindings_wasm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}