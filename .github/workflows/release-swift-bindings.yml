name: Release Swift Bindings
on:
  workflow_dispatch:
jobs:
  build-macos:
    runs-on: warp-macos-13-arm64-6x
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-apple-ios
          - x86_64-apple-ios
          - aarch64-apple-ios-sim
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Update rust toolchains, add target
        run: |
          rustup update
          rustup target add ${{ matrix.target }}
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
            bindings_ffi
      - name: Install Cross
        uses: taiki-e/install-action@cross
      - name: Build target
        env:
          CROSS_NO_WARNINGS: "0"
          IPHONEOS_DEPLOYMENT_TARGET: 10
        run: |
          cross build --release --target ${{ matrix.target }} --manifest-path bindings_ffi/Cargo.toml
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/libxmtpv3.a
            target/${{ matrix.target }}/release/libxmtpv3.dylib
          retention-days: 1
  swift:
    runs-on: warp-macos-13-arm64-6x
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Update rust toolchains, add target
        run: |
          rustup update
          rustup target add x86_64-apple-darwin
      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            .
            bindings_ffi
      - name: Install swift
        run: brew install swiftformat
      - name: Generate static bindings
        working-directory: bindings_ffi
        run: |
          make bindgenstatic
          make swift
      - name: Generate dynamic bindings
        working-directory: bindings_ffi
        run: |
          make bindgendynamic
          make swiftdyn
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: swift
          path: bindings_ffi/build/swift/
          retention-days: 1
  package-swift:
    needs: [build-macos, swift]
    runs-on: warp-macos-13-arm64-6x
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: bindings_ffi/build
      - name: Build static archive
        working-directory: bindings_ffi
        run: |
          mkdir -p Sources/LibXMTP
          mv build/swift/static/xmtpv3.swift Sources/LibXMTP/
          make framework
          cp ../LICENSE ./LICENSE
          zip -r LibXMTPSwiftFFI.zip Sources LibXMTPSwiftFFI.xcframework LICENSE
      - name: Upload static
        uses: actions/upload-artifact@v4
        with:
          name: LibXMTPSwiftFFI
          retention-days: 1
          path: ./bindings_ffi/LibXMTPSwiftFFI.zip
          if-no-files-found: error
  package-swift-dynamic:
    needs: [build-macos, swift]
    runs-on: warp-macos-13-arm64-6x
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          path: bindings_ffi/build
      - name: Build dynamic archive
        working-directory: bindings_ffi
        run: |
          mkdir -p Sources/LibXMTP/Dynamic
          mv build/swift/dynamic/xmtpv3.swift Sources/LibXMTP/Dynamic
          make frameworkdyn
          cp ../LICENSE ./LICENSE
          zip -r LibXMTPSwiftFFIDynamic.zip Sources LibXMTPSwiftFFIDynamic.xcframework LICENSE
      - name: Upload dynamic
        uses: actions/upload-artifact@v4
        with:
          name: LibXMTPSwiftFFIDynamic
          retention-days: 1
          path: ./bindings_ffi/LibXMTPSwiftFFIDynamic.zip
          if-no-files-found: error
  create-release:
    needs: [package-swift, package-swift-dynamic]
    runs-on: warp-macos-13-arm64-6x
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: LibXMTPSwiftFFI*
          merge-multiple: true
      - name: Calculate static checksum
        id: checksum-static
        run: |
          echo "$(shasum -a 256 LibXMTPSwiftFFI.zip | awk '{ print $1 }')" > LibXMTPSwiftFFI.sha256
      - name: Calculate dynamic checksum
        id: checksum-dynamic
        run: |
          echo "$(shasum -a 256 LibXMTPSwiftFFIDynamic.zip | awk '{ print $1 }')" > LibXMTPSwiftFFIDynamic.sha256
      - name: Get short SHA
        id: slug
        run: echo "sha7=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT
      - name: Get crate version
        id: version
        run: |
          echo "value=$(cargo metadata --manifest-path bindings_ffi/Cargo.toml --format-version 1 | jq -r '.packages[] | select(.name == "xmtpv3") | .version')" >> $GITHUB_OUTPUT
      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          name: Swift-Bindings-${{ steps.version.outputs.value }}.${{ steps.slug.outputs.sha7 }}
          tag_name: swift-bindings-${{ steps.version.outputs.value }}.${{ steps.slug.outputs.sha7 }}
          files: |
            LibXMTPSwiftFFI*.zip
            LibXMTPSwiftFFI*.sha256
          prerelease: true
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}
