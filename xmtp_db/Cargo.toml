[package]
name = "xmtp_db"
edition = "2024"
license.workspace = true
version.workspace = true

[dependencies]
bincode.workspace = true
derive_builder.workspace = true
diesel_migrations = { workspace = true, features = ["sqlite"] }
hex.workspace = true
openmls.workspace = true
openmls_basic_credential.workspace = true
openmls_rust_crypto.workspace = true
openmls_traits = { workspace = true }
parking_lot.workspace = true
prost.workspace = true
rand.workspace = true
serde.workspace = true
thiserror.workspace = true
tracing.workspace = true
xmtp_common.workspace = true
xmtp_proto.workspace = true
zeroize.workspace = true

# TODO: possibly separate these crates
xmtp_content_types.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
libsqlite3-sys = { version = "0.32", features = [
  "bundled-sqlcipher-vendored-openssl",
] }
diesel = { workspace = true, features = [
  "r2d2",
  "returning_clauses_for_sqlite_3_35",
  "sqlite",
  "32-column-tables",
] }
dyn-clone.workspace = true

[target.'cfg(all(target_family = "wasm", target_os = "unknown"))'.dependencies]
diesel = { workspace = true, features = [
  "returning_clauses_for_sqlite_3_35",
  "sqlite",
  "32-column-tables",
] }
sqlite-wasm-rs = { version = ">=0.3.0, <0.4.0", default-features = false, features = [
  "bundled",
] }
tokio = { workspace = true, features = ["macros", "tracing"] }


[dev-dependencies]
xmtp_common = { workspace = true, features = ["test-utils"] }
xmtp_cryptography.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio = { workspace = true, features = [
  "macros",
  "tracing",
  "rt",
  "rt-multi-thread",
] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test.workspace = true

[features]
test-utils = []
