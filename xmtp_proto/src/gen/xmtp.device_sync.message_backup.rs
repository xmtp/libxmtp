// @generated
// This file is @generated by prost-build.
/// Proto representation of a stored group message
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GroupMessageSave {
    #[prost(bytes="vec", tag="1")]
    pub id: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes="vec", tag="2")]
    pub group_id: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes="vec", tag="3")]
    pub decrypted_message_bytes: ::prost::alloc::vec::Vec<u8>,
    #[prost(int64, tag="4")]
    pub sent_at_ns: i64,
    #[prost(enumeration="GroupMessageKindSave", tag="5")]
    pub kind: i32,
    #[prost(bytes="vec", tag="6")]
    pub sender_installation_id: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag="7")]
    pub sender_inbox_id: ::prost::alloc::string::String,
    #[prost(enumeration="DeliveryStatusSave", tag="8")]
    pub delivery_status: i32,
    #[prost(enumeration="ContentTypeSave", tag="9")]
    pub content_type: i32,
    #[prost(int32, tag="10")]
    pub version_major: i32,
    #[prost(int32, tag="11")]
    pub version_minor: i32,
    #[prost(string, tag="12")]
    pub authority_id: ::prost::alloc::string::String,
    #[prost(bytes="vec", optional, tag="13")]
    pub reference_id: ::core::option::Option<::prost::alloc::vec::Vec<u8>>,
}
/// Group message kind
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum GroupMessageKindSave {
    Unspecified = 0,
    Application = 1,
    MembershipChange = 2,
}
impl GroupMessageKindSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            GroupMessageKindSave::Unspecified => "GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED",
            GroupMessageKindSave::Application => "GROUP_MESSAGE_KIND_SAVE_APPLICATION",
            GroupMessageKindSave::MembershipChange => "GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "GROUP_MESSAGE_KIND_SAVE_APPLICATION" => Some(Self::Application),
            "GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE" => Some(Self::MembershipChange),
            _ => None,
        }
    }
}
/// Group message delivery status
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum DeliveryStatusSave {
    Unspecified = 0,
    Unpublished = 1,
    Published = 2,
    Failed = 3,
}
impl DeliveryStatusSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            DeliveryStatusSave::Unspecified => "DELIVERY_STATUS_SAVE_UNSPECIFIED",
            DeliveryStatusSave::Unpublished => "DELIVERY_STATUS_SAVE_UNPUBLISHED",
            DeliveryStatusSave::Published => "DELIVERY_STATUS_SAVE_PUBLISHED",
            DeliveryStatusSave::Failed => "DELIVERY_STATUS_SAVE_FAILED",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DELIVERY_STATUS_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "DELIVERY_STATUS_SAVE_UNPUBLISHED" => Some(Self::Unpublished),
            "DELIVERY_STATUS_SAVE_PUBLISHED" => Some(Self::Published),
            "DELIVERY_STATUS_SAVE_FAILED" => Some(Self::Failed),
            _ => None,
        }
    }
}
/// Group message content type
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ContentTypeSave {
    Unspecified = 0,
    Unknown = 1,
    Text = 2,
    GroupMembershipChange = 3,
    GroupUpdated = 4,
    Reaction = 5,
    ReadReceipt = 6,
    Reply = 7,
    Attachment = 8,
    RemoteAttachment = 9,
    TransactionReference = 10,
}
impl ContentTypeSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            ContentTypeSave::Unspecified => "CONTENT_TYPE_SAVE_UNSPECIFIED",
            ContentTypeSave::Unknown => "CONTENT_TYPE_SAVE_UNKNOWN",
            ContentTypeSave::Text => "CONTENT_TYPE_SAVE_TEXT",
            ContentTypeSave::GroupMembershipChange => "CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE",
            ContentTypeSave::GroupUpdated => "CONTENT_TYPE_SAVE_GROUP_UPDATED",
            ContentTypeSave::Reaction => "CONTENT_TYPE_SAVE_REACTION",
            ContentTypeSave::ReadReceipt => "CONTENT_TYPE_SAVE_READ_RECEIPT",
            ContentTypeSave::Reply => "CONTENT_TYPE_SAVE_REPLY",
            ContentTypeSave::Attachment => "CONTENT_TYPE_SAVE_ATTACHMENT",
            ContentTypeSave::RemoteAttachment => "CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT",
            ContentTypeSave::TransactionReference => "CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CONTENT_TYPE_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "CONTENT_TYPE_SAVE_UNKNOWN" => Some(Self::Unknown),
            "CONTENT_TYPE_SAVE_TEXT" => Some(Self::Text),
            "CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE" => Some(Self::GroupMembershipChange),
            "CONTENT_TYPE_SAVE_GROUP_UPDATED" => Some(Self::GroupUpdated),
            "CONTENT_TYPE_SAVE_REACTION" => Some(Self::Reaction),
            "CONTENT_TYPE_SAVE_READ_RECEIPT" => Some(Self::ReadReceipt),
            "CONTENT_TYPE_SAVE_REPLY" => Some(Self::Reply),
            "CONTENT_TYPE_SAVE_ATTACHMENT" => Some(Self::Attachment),
            "CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT" => Some(Self::RemoteAttachment),
            "CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE" => Some(Self::TransactionReference),
            _ => None,
        }
    }
}
/// Encoded file descriptor set for the `xmtp.device_sync.message_backup` package
pub const FILE_DESCRIPTOR_SET: &[u8] = &[
    0x0a, 0xf2, 0x1a, 0x0a, 0x20, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63,
    0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e,
    0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x64, 0x65, 0x76, 0x69,
    0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
    0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x95, 0x05, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70,
    0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
    0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
    0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x67,
    0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70,
    0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65,
    0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
    0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1c,
    0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x74, 0x5f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01,
    0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x4e, 0x73, 0x12, 0x49, 0x0a, 0x04,
    0x6b, 0x69, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x78, 0x6d, 0x74,
    0x70, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x65,
    0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x47, 0x72, 0x6f,
    0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x53, 0x61, 0x76,
    0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x65, 0x6e, 0x64, 0x65,
    0x72, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
    0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49,
    0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a,
    0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64,
    0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e,
    0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x5c, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
    0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33,
    0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e,
    0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
    0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
    0x61, 0x76, 0x65, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61,
    0x74, 0x75, 0x73, 0x12, 0x53, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74,
    0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x78, 0x6d, 0x74, 0x70,
    0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x65, 0x73,
    0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
    0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x61, 0x76, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
    0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73,
    0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
    0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x23, 0x0a,
    0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x0b,
    0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e,
    0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f,
    0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
    0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
    0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0b, 0x72,
    0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a,
    0x0d, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x2a, 0x97,
    0x01, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b,
    0x69, 0x6e, 0x64, 0x53, 0x61, 0x76, 0x65, 0x12, 0x27, 0x0a, 0x23, 0x47, 0x52, 0x4f, 0x55, 0x50,
    0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x41,
    0x56, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
    0x12, 0x27, 0x0a, 0x23, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
    0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x4c,
    0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x47, 0x52, 0x4f,
    0x55, 0x50, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f,
    0x53, 0x41, 0x56, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f,
    0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x02, 0x2a, 0xa5, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c,
    0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x61, 0x76, 0x65, 0x12,
    0x24, 0x0a, 0x20, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54,
    0x55, 0x53, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
    0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52,
    0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x55, 0x4e,
    0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x44,
    0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53,
    0x41, 0x56, 0x45, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12,
    0x1f, 0x0a, 0x1b, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54,
    0x55, 0x53, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03,
    0x2a, 0x9c, 0x03, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
    0x53, 0x61, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f,
    0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
    0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x54, 0x45,
    0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x4b,
    0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e,
    0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54,
    0x10, 0x02, 0x12, 0x2d, 0x0a, 0x29, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
    0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x4d, 0x45,
    0x4d, 0x42, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10,
    0x03, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
    0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x5f, 0x55, 0x50, 0x44,
    0x41, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e,
    0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x43,
    0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e,
    0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44,
    0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x50, 0x54, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f,
    0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f,
    0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4e, 0x54, 0x45,
    0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x41, 0x54, 0x54,
    0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x08, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x4f, 0x4e,
    0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x52,
    0x45, 0x4d, 0x4f, 0x54, 0x45, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54,
    0x10, 0x09, 0x12, 0x2b, 0x0a, 0x27, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
    0x50, 0x45, 0x5f, 0x53, 0x41, 0x56, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54,
    0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x46, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x0a, 0x42,
    0xcf, 0x01, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x64, 0x65, 0x76,
    0x69, 0x63, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
    0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x42, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
    0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0xa2, 0x02, 0x03,
    0x58, 0x44, 0x4d, 0xaa, 0x02, 0x1d, 0x58, 0x6d, 0x74, 0x70, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
    0x65, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63,
    0x6b, 0x75, 0x70, 0xca, 0x02, 0x1d, 0x58, 0x6d, 0x74, 0x70, 0x5c, 0x44, 0x65, 0x76, 0x69, 0x63,
    0x65, 0x53, 0x79, 0x6e, 0x63, 0x5c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63,
    0x6b, 0x75, 0x70, 0xe2, 0x02, 0x29, 0x58, 0x6d, 0x74, 0x70, 0x5c, 0x44, 0x65, 0x76, 0x69, 0x63,
    0x65, 0x53, 0x79, 0x6e, 0x63, 0x5c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63,
    0x6b, 0x75, 0x70, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
    0x02, 0x1f, 0x58, 0x6d, 0x74, 0x70, 0x3a, 0x3a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x79,
    0x6e, 0x63, 0x3a, 0x3a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75,
    0x70, 0x4a, 0xd9, 0x0d, 0x0a, 0x06, 0x12, 0x04, 0x01, 0x00, 0x31, 0x01, 0x0a, 0x23, 0x0a, 0x01,
    0x0c, 0x12, 0x03, 0x01, 0x00, 0x12, 0x1a, 0x19, 0x20, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
    0x69, 0x6f, 0x6e, 0x73, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73,
    0x0a, 0x0a, 0x08, 0x0a, 0x01, 0x02, 0x12, 0x03, 0x02, 0x00, 0x28, 0x0a, 0x3c, 0x0a, 0x02, 0x04,
    0x00, 0x12, 0x04, 0x05, 0x00, 0x13, 0x01, 0x1a, 0x30, 0x20, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x20,
    0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6f,
    0x66, 0x20, 0x61, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x64, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70,
    0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x0a, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x00, 0x01,
    0x12, 0x03, 0x05, 0x08, 0x18, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x00, 0x12, 0x03, 0x06,
    0x02, 0x0f, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00, 0x05, 0x12, 0x03, 0x06, 0x02, 0x07,
    0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x00, 0x01, 0x12, 0x03, 0x06, 0x08, 0x0a, 0x0a, 0x0c,
    0x0a, 0x05, 0x04, 0x00, 0x02, 0x00, 0x03, 0x12, 0x03, 0x06, 0x0d, 0x0e, 0x0a, 0x0b, 0x0a, 0x04,
    0x04, 0x00, 0x02, 0x01, 0x12, 0x03, 0x07, 0x02, 0x15, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02,
    0x01, 0x05, 0x12, 0x03, 0x07, 0x02, 0x07, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x01,
    0x12, 0x03, 0x07, 0x08, 0x10, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x01, 0x03, 0x12, 0x03,
    0x07, 0x13, 0x14, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x02, 0x12, 0x03, 0x08, 0x02, 0x24,
    0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x02, 0x05, 0x12, 0x03, 0x08, 0x02, 0x07, 0x0a, 0x0c,
    0x0a, 0x05, 0x04, 0x00, 0x02, 0x02, 0x01, 0x12, 0x03, 0x08, 0x08, 0x1f, 0x0a, 0x0c, 0x0a, 0x05,
    0x04, 0x00, 0x02, 0x02, 0x03, 0x12, 0x03, 0x08, 0x22, 0x23, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00,
    0x02, 0x03, 0x12, 0x03, 0x09, 0x02, 0x17, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x03, 0x05,
    0x12, 0x03, 0x09, 0x02, 0x07, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x03, 0x01, 0x12, 0x03,
    0x09, 0x08, 0x12, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x03, 0x03, 0x12, 0x03, 0x09, 0x15,
    0x16, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x04, 0x12, 0x03, 0x0a, 0x02, 0x20, 0x0a, 0x0c,
    0x0a, 0x05, 0x04, 0x00, 0x02, 0x04, 0x06, 0x12, 0x03, 0x0a, 0x02, 0x16, 0x0a, 0x0c, 0x0a, 0x05,
    0x04, 0x00, 0x02, 0x04, 0x01, 0x12, 0x03, 0x0a, 0x17, 0x1b, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00,
    0x02, 0x04, 0x03, 0x12, 0x03, 0x0a, 0x1e, 0x1f, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x05,
    0x12, 0x03, 0x0b, 0x02, 0x23, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x05, 0x05, 0x12, 0x03,
    0x0b, 0x02, 0x07, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x05, 0x01, 0x12, 0x03, 0x0b, 0x08,
    0x1e, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x05, 0x03, 0x12, 0x03, 0x0b, 0x21, 0x22, 0x0a,
    0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x06, 0x12, 0x03, 0x0c, 0x02, 0x1d, 0x0a, 0x0c, 0x0a, 0x05,
    0x04, 0x00, 0x02, 0x06, 0x05, 0x12, 0x03, 0x0c, 0x02, 0x08, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00,
    0x02, 0x06, 0x01, 0x12, 0x03, 0x0c, 0x09, 0x18, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x06,
    0x03, 0x12, 0x03, 0x0c, 0x1b, 0x1c, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x07, 0x12, 0x03,
    0x0d, 0x02, 0x29, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x07, 0x06, 0x12, 0x03, 0x0d, 0x02,
    0x14, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x07, 0x01, 0x12, 0x03, 0x0d, 0x15, 0x24, 0x0a,
    0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x07, 0x03, 0x12, 0x03, 0x0d, 0x27, 0x28, 0x0a, 0x0b, 0x0a,
    0x04, 0x04, 0x00, 0x02, 0x08, 0x12, 0x03, 0x0e, 0x02, 0x23, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00,
    0x02, 0x08, 0x06, 0x12, 0x03, 0x0e, 0x02, 0x11, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x08,
    0x01, 0x12, 0x03, 0x0e, 0x12, 0x1e, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x08, 0x03, 0x12,
    0x03, 0x0e, 0x21, 0x22, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x09, 0x12, 0x03, 0x0f, 0x02,
    0x1b, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x09, 0x05, 0x12, 0x03, 0x0f, 0x02, 0x07, 0x0a,
    0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x09, 0x01, 0x12, 0x03, 0x0f, 0x08, 0x15, 0x0a, 0x0c, 0x0a,
    0x05, 0x04, 0x00, 0x02, 0x09, 0x03, 0x12, 0x03, 0x0f, 0x18, 0x1a, 0x0a, 0x0b, 0x0a, 0x04, 0x04,
    0x00, 0x02, 0x0a, 0x12, 0x03, 0x10, 0x02, 0x1b, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x0a,
    0x05, 0x12, 0x03, 0x10, 0x02, 0x07, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x0a, 0x01, 0x12,
    0x03, 0x10, 0x08, 0x15, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x0a, 0x03, 0x12, 0x03, 0x10,
    0x18, 0x1a, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02, 0x0b, 0x12, 0x03, 0x11, 0x02, 0x1b, 0x0a,
    0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x0b, 0x05, 0x12, 0x03, 0x11, 0x02, 0x08, 0x0a, 0x0c, 0x0a,
    0x05, 0x04, 0x00, 0x02, 0x0b, 0x01, 0x12, 0x03, 0x11, 0x09, 0x15, 0x0a, 0x0c, 0x0a, 0x05, 0x04,
    0x00, 0x02, 0x0b, 0x03, 0x12, 0x03, 0x11, 0x18, 0x1a, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x00, 0x02,
    0x0c, 0x12, 0x03, 0x12, 0x02, 0x23, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x0c, 0x04, 0x12,
    0x03, 0x12, 0x02, 0x0a, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x0c, 0x05, 0x12, 0x03, 0x12,
    0x0b, 0x10, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x0c, 0x01, 0x12, 0x03, 0x12, 0x11, 0x1d,
    0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x00, 0x02, 0x0c, 0x03, 0x12, 0x03, 0x12, 0x20, 0x22, 0x0a, 0x20,
    0x0a, 0x02, 0x05, 0x00, 0x12, 0x04, 0x16, 0x00, 0x1a, 0x01, 0x1a, 0x14, 0x20, 0x47, 0x72, 0x6f,
    0x75, 0x70, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x6b, 0x69, 0x6e, 0x64, 0x0a,
    0x0a, 0x0a, 0x0a, 0x03, 0x05, 0x00, 0x01, 0x12, 0x03, 0x16, 0x05, 0x19, 0x0a, 0x0b, 0x0a, 0x04,
    0x05, 0x00, 0x02, 0x00, 0x12, 0x03, 0x17, 0x02, 0x2a, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02,
    0x00, 0x01, 0x12, 0x03, 0x17, 0x02, 0x25, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02, 0x00, 0x02,
    0x12, 0x03, 0x17, 0x28, 0x29, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x00, 0x02, 0x01, 0x12, 0x03, 0x18,
    0x02, 0x2a, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02, 0x01, 0x01, 0x12, 0x03, 0x18, 0x02, 0x25,
    0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02, 0x01, 0x02, 0x12, 0x03, 0x18, 0x28, 0x29, 0x0a, 0x0b,
    0x0a, 0x04, 0x05, 0x00, 0x02, 0x02, 0x12, 0x03, 0x19, 0x02, 0x30, 0x0a, 0x0c, 0x0a, 0x05, 0x05,
    0x00, 0x02, 0x02, 0x01, 0x12, 0x03, 0x19, 0x02, 0x2b, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02,
    0x02, 0x02, 0x12, 0x03, 0x19, 0x2e, 0x2f, 0x0a, 0x2b, 0x0a, 0x02, 0x05, 0x01, 0x12, 0x04, 0x1d,
    0x00, 0x22, 0x01, 0x1a, 0x1f, 0x20, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x6d, 0x65, 0x73, 0x73,
    0x61, 0x67, 0x65, 0x20, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x20, 0x73, 0x74, 0x61,
    0x74, 0x75, 0x73, 0x0a, 0x0a, 0x0a, 0x0a, 0x03, 0x05, 0x01, 0x01, 0x12, 0x03, 0x1d, 0x05, 0x17,
    0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x01, 0x02, 0x00, 0x12, 0x03, 0x1e, 0x02, 0x27, 0x0a, 0x0c, 0x0a,
    0x05, 0x05, 0x01, 0x02, 0x00, 0x01, 0x12, 0x03, 0x1e, 0x02, 0x22, 0x0a, 0x0c, 0x0a, 0x05, 0x05,
    0x01, 0x02, 0x00, 0x02, 0x12, 0x03, 0x1e, 0x25, 0x26, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x01, 0x02,
    0x01, 0x12, 0x03, 0x1f, 0x02, 0x27, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x01, 0x02, 0x01, 0x01, 0x12,
    0x03, 0x1f, 0x02, 0x22, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x01, 0x02, 0x01, 0x02, 0x12, 0x03, 0x1f,
    0x25, 0x26, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x01, 0x02, 0x02, 0x12, 0x03, 0x20, 0x02, 0x25, 0x0a,
    0x0c, 0x0a, 0x05, 0x05, 0x01, 0x02, 0x02, 0x01, 0x12, 0x03, 0x20, 0x02, 0x20, 0x0a, 0x0c, 0x0a,
    0x05, 0x05, 0x01, 0x02, 0x02, 0x02, 0x12, 0x03, 0x20, 0x23, 0x24, 0x0a, 0x0b, 0x0a, 0x04, 0x05,
    0x01, 0x02, 0x03, 0x12, 0x03, 0x21, 0x02, 0x22, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x01, 0x02, 0x03,
    0x01, 0x12, 0x03, 0x21, 0x02, 0x1d, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x01, 0x02, 0x03, 0x02, 0x12,
    0x03, 0x21, 0x20, 0x21, 0x0a, 0x28, 0x0a, 0x02, 0x05, 0x02, 0x12, 0x04, 0x25, 0x00, 0x31, 0x01,
    0x1a, 0x1c, 0x20, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
    0x20, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x0a, 0x0a, 0x0a,
    0x0a, 0x03, 0x05, 0x02, 0x01, 0x12, 0x03, 0x25, 0x05, 0x14, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x02,
    0x02, 0x00, 0x12, 0x03, 0x26, 0x02, 0x24, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x00, 0x01,
    0x12, 0x03, 0x26, 0x02, 0x1f, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x00, 0x02, 0x12, 0x03,
    0x26, 0x22, 0x23, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x02, 0x02, 0x01, 0x12, 0x03, 0x27, 0x02, 0x20,
    0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x01, 0x01, 0x12, 0x03, 0x27, 0x02, 0x1b, 0x0a, 0x0c,
    0x0a, 0x05, 0x05, 0x02, 0x02, 0x01, 0x02, 0x12, 0x03, 0x27, 0x1e, 0x1f, 0x0a, 0x0b, 0x0a, 0x04,
    0x05, 0x02, 0x02, 0x02, 0x12, 0x03, 0x28, 0x02, 0x1d, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02,
    0x02, 0x01, 0x12, 0x03, 0x28, 0x02, 0x18, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x02, 0x02,
    0x12, 0x03, 0x28, 0x1b, 0x1c, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x02, 0x02, 0x03, 0x12, 0x03, 0x29,
    0x02, 0x30, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x03, 0x01, 0x12, 0x03, 0x29, 0x02, 0x2b,
    0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x03, 0x02, 0x12, 0x03, 0x29, 0x2e, 0x2f, 0x0a, 0x0b,
    0x0a, 0x04, 0x05, 0x02, 0x02, 0x04, 0x12, 0x03, 0x2a, 0x02, 0x26, 0x0a, 0x0c, 0x0a, 0x05, 0x05,
    0x02, 0x02, 0x04, 0x01, 0x12, 0x03, 0x2a, 0x02, 0x21, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02,
    0x04, 0x02, 0x12, 0x03, 0x2a, 0x24, 0x25, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x02, 0x02, 0x05, 0x12,
    0x03, 0x2b, 0x02, 0x21, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x05, 0x01, 0x12, 0x03, 0x2b,
    0x02, 0x1c, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x05, 0x02, 0x12, 0x03, 0x2b, 0x1f, 0x20,
    0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x02, 0x02, 0x06, 0x12, 0x03, 0x2c, 0x02, 0x25, 0x0a, 0x0c, 0x0a,
    0x05, 0x05, 0x02, 0x02, 0x06, 0x01, 0x12, 0x03, 0x2c, 0x02, 0x20, 0x0a, 0x0c, 0x0a, 0x05, 0x05,
    0x02, 0x02, 0x06, 0x02, 0x12, 0x03, 0x2c, 0x23, 0x24, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x02, 0x02,
    0x07, 0x12, 0x03, 0x2d, 0x02, 0x1e, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x07, 0x01, 0x12,
    0x03, 0x2d, 0x02, 0x19, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x07, 0x02, 0x12, 0x03, 0x2d,
    0x1c, 0x1d, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x02, 0x02, 0x08, 0x12, 0x03, 0x2e, 0x02, 0x23, 0x0a,
    0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x08, 0x01, 0x12, 0x03, 0x2e, 0x02, 0x1e, 0x0a, 0x0c, 0x0a,
    0x05, 0x05, 0x02, 0x02, 0x08, 0x02, 0x12, 0x03, 0x2e, 0x21, 0x22, 0x0a, 0x0b, 0x0a, 0x04, 0x05,
    0x02, 0x02, 0x09, 0x12, 0x03, 0x2f, 0x02, 0x2a, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x09,
    0x01, 0x12, 0x03, 0x2f, 0x02, 0x25, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x09, 0x02, 0x12,
    0x03, 0x2f, 0x28, 0x29, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x02, 0x02, 0x0a, 0x12, 0x03, 0x30, 0x02,
    0x2f, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x0a, 0x01, 0x12, 0x03, 0x30, 0x02, 0x29, 0x0a,
    0x0c, 0x0a, 0x05, 0x05, 0x02, 0x02, 0x0a, 0x02, 0x12, 0x03, 0x30, 0x2c, 0x2e, 0x62, 0x06, 0x70,
    0x72, 0x6f, 0x74, 0x6f, 0x33,
];
include!("xmtp.device_sync.message_backup.serde.rs");
// @@protoc_insertion_point(module)