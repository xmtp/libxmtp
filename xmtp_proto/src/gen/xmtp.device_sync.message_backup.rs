// This file is @generated by prost-build.
/// Proto representation of a stored group message
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct GroupMessageSave {
    #[prost(bytes = "vec", tag = "1")]
    pub id: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "2")]
    pub group_id: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes = "vec", tag = "3")]
    pub decrypted_message_bytes: ::prost::alloc::vec::Vec<u8>,
    #[prost(int64, tag = "4")]
    pub sent_at_ns: i64,
    #[prost(enumeration = "GroupMessageKindSave", tag = "5")]
    pub kind: i32,
    #[prost(bytes = "vec", tag = "6")]
    pub sender_installation_id: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag = "7")]
    pub sender_inbox_id: ::prost::alloc::string::String,
    #[prost(enumeration = "DeliveryStatusSave", tag = "8")]
    pub delivery_status: i32,
    #[prost(enumeration = "ContentTypeSave", tag = "9")]
    pub content_type: i32,
    #[prost(int32, tag = "10")]
    pub version_major: i32,
    #[prost(int32, tag = "11")]
    pub version_minor: i32,
    #[prost(string, tag = "12")]
    pub authority_id: ::prost::alloc::string::String,
    #[prost(bytes = "vec", optional, tag = "13")]
    pub reference_id: ::core::option::Option<::prost::alloc::vec::Vec<u8>>,
    #[prost(int64, optional, tag = "14")]
    pub sequence_id: ::core::option::Option<i64>,
    #[prost(int64, optional, tag = "15")]
    pub originator_id: ::core::option::Option<i64>,
}
impl ::prost::Name for GroupMessageSave {
    const NAME: &'static str = "GroupMessageSave";
    const PACKAGE: &'static str = "xmtp.device_sync.message_backup";
    fn full_name() -> ::prost::alloc::string::String {
        "xmtp.device_sync.message_backup.GroupMessageSave".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/xmtp.device_sync.message_backup.GroupMessageSave".into()
    }
}
/// Group message kind
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum GroupMessageKindSave {
    Unspecified = 0,
    Application = 1,
    MembershipChange = 2,
}
impl GroupMessageKindSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED",
            Self::Application => "GROUP_MESSAGE_KIND_SAVE_APPLICATION",
            Self::MembershipChange => "GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "GROUP_MESSAGE_KIND_SAVE_APPLICATION" => Some(Self::Application),
            "GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE" => Some(Self::MembershipChange),
            _ => None,
        }
    }
}
/// Group message delivery status
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum DeliveryStatusSave {
    Unspecified = 0,
    Unpublished = 1,
    Published = 2,
    Failed = 3,
}
impl DeliveryStatusSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "DELIVERY_STATUS_SAVE_UNSPECIFIED",
            Self::Unpublished => "DELIVERY_STATUS_SAVE_UNPUBLISHED",
            Self::Published => "DELIVERY_STATUS_SAVE_PUBLISHED",
            Self::Failed => "DELIVERY_STATUS_SAVE_FAILED",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "DELIVERY_STATUS_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "DELIVERY_STATUS_SAVE_UNPUBLISHED" => Some(Self::Unpublished),
            "DELIVERY_STATUS_SAVE_PUBLISHED" => Some(Self::Published),
            "DELIVERY_STATUS_SAVE_FAILED" => Some(Self::Failed),
            _ => None,
        }
    }
}
/// Group message content type
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ContentTypeSave {
    Unspecified = 0,
    Unknown = 1,
    Text = 2,
    GroupMembershipChange = 3,
    GroupUpdated = 4,
    Reaction = 5,
    ReadReceipt = 6,
    Reply = 7,
    Attachment = 8,
    RemoteAttachment = 9,
    TransactionReference = 10,
}
impl ContentTypeSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "CONTENT_TYPE_SAVE_UNSPECIFIED",
            Self::Unknown => "CONTENT_TYPE_SAVE_UNKNOWN",
            Self::Text => "CONTENT_TYPE_SAVE_TEXT",
            Self::GroupMembershipChange => "CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE",
            Self::GroupUpdated => "CONTENT_TYPE_SAVE_GROUP_UPDATED",
            Self::Reaction => "CONTENT_TYPE_SAVE_REACTION",
            Self::ReadReceipt => "CONTENT_TYPE_SAVE_READ_RECEIPT",
            Self::Reply => "CONTENT_TYPE_SAVE_REPLY",
            Self::Attachment => "CONTENT_TYPE_SAVE_ATTACHMENT",
            Self::RemoteAttachment => "CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT",
            Self::TransactionReference => "CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CONTENT_TYPE_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "CONTENT_TYPE_SAVE_UNKNOWN" => Some(Self::Unknown),
            "CONTENT_TYPE_SAVE_TEXT" => Some(Self::Text),
            "CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE" => {
                Some(Self::GroupMembershipChange)
            }
            "CONTENT_TYPE_SAVE_GROUP_UPDATED" => Some(Self::GroupUpdated),
            "CONTENT_TYPE_SAVE_REACTION" => Some(Self::Reaction),
            "CONTENT_TYPE_SAVE_READ_RECEIPT" => Some(Self::ReadReceipt),
            "CONTENT_TYPE_SAVE_REPLY" => Some(Self::Reply),
            "CONTENT_TYPE_SAVE_ATTACHMENT" => Some(Self::Attachment),
            "CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT" => Some(Self::RemoteAttachment),
            "CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE" => Some(Self::TransactionReference),
            _ => None,
        }
    }
}
