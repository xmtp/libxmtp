// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetSyncCursorRequest {
}
impl ::prost::Name for GetSyncCursorRequest {
const NAME: &'static str = "GetSyncCursorRequest";
const PACKAGE: &'static str = "xmtp.xmtpv4.metadata_api";
fn full_name() -> ::prost::alloc::string::String { "xmtp.xmtpv4.metadata_api.GetSyncCursorRequest".into() }fn type_url() -> ::prost::alloc::string::String { "/xmtp.xmtpv4.metadata_api.GetSyncCursorRequest".into() }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetSyncCursorResponse {
    #[prost(message, optional, tag="1")]
    pub latest_sync: ::core::option::Option<super::envelopes::Cursor>,
}
impl ::prost::Name for GetSyncCursorResponse {
const NAME: &'static str = "GetSyncCursorResponse";
const PACKAGE: &'static str = "xmtp.xmtpv4.metadata_api";
fn full_name() -> ::prost::alloc::string::String { "xmtp.xmtpv4.metadata_api.GetSyncCursorResponse".into() }fn type_url() -> ::prost::alloc::string::String { "/xmtp.xmtpv4.metadata_api.GetSyncCursorResponse".into() }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct GetVersionRequest {
}
impl ::prost::Name for GetVersionRequest {
const NAME: &'static str = "GetVersionRequest";
const PACKAGE: &'static str = "xmtp.xmtpv4.metadata_api";
fn full_name() -> ::prost::alloc::string::String { "xmtp.xmtpv4.metadata_api.GetVersionRequest".into() }fn type_url() -> ::prost::alloc::string::String { "/xmtp.xmtpv4.metadata_api.GetVersionRequest".into() }}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetVersionResponse {
    #[prost(string, tag="1")]
    pub version: ::prost::alloc::string::String,
}
impl ::prost::Name for GetVersionResponse {
const NAME: &'static str = "GetVersionResponse";
const PACKAGE: &'static str = "xmtp.xmtpv4.metadata_api";
fn full_name() -> ::prost::alloc::string::String { "xmtp.xmtpv4.metadata_api.GetVersionResponse".into() }fn type_url() -> ::prost::alloc::string::String { "/xmtp.xmtpv4.metadata_api.GetVersionResponse".into() }}
/// Get information about payer spend and message counts for a given time period
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetPayerInfoRequest {
    #[prost(string, repeated, tag="1")]
    pub payer_addresses: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(enumeration="PayerInfoGranularity", tag="2")]
    pub granularity: i32,
}
impl ::prost::Name for GetPayerInfoRequest {
const NAME: &'static str = "GetPayerInfoRequest";
const PACKAGE: &'static str = "xmtp.xmtpv4.metadata_api";
fn full_name() -> ::prost::alloc::string::String { "xmtp.xmtpv4.metadata_api.GetPayerInfoRequest".into() }fn type_url() -> ::prost::alloc::string::String { "/xmtp.xmtpv4.metadata_api.GetPayerInfoRequest".into() }}
/// Response to GetPayerInfoRequest
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GetPayerInfoResponse {
    /// Map of payer address
    #[prost(map="string, message", tag="1")]
    pub payer_info: ::std::collections::HashMap<::prost::alloc::string::String, get_payer_info_response::PayerInfo>,
}
/// Nested message and enum types in `GetPayerInfoResponse`.
pub mod get_payer_info_response {
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
    pub struct PeriodSummary {
        #[prost(uint64, tag="1")]
        pub amount_spent_picodollars: u64,
        #[prost(uint64, tag="2")]
        pub num_messages: u64,
        #[prost(uint64, tag="3")]
        pub period_start_unix_seconds: u64,
    }
impl ::prost::Name for PeriodSummary {
const NAME: &'static str = "PeriodSummary";
const PACKAGE: &'static str = "xmtp.xmtpv4.metadata_api";
fn full_name() -> ::prost::alloc::string::String { "xmtp.xmtpv4.metadata_api.GetPayerInfoResponse.PeriodSummary".into() }fn type_url() -> ::prost::alloc::string::String { "/xmtp.xmtpv4.metadata_api.GetPayerInfoResponse.PeriodSummary".into() }}
    #[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
    pub struct PayerInfo {
        #[prost(message, repeated, tag="1")]
        pub period_summaries: ::prost::alloc::vec::Vec<PeriodSummary>,
    }
impl ::prost::Name for PayerInfo {
const NAME: &'static str = "PayerInfo";
const PACKAGE: &'static str = "xmtp.xmtpv4.metadata_api";
fn full_name() -> ::prost::alloc::string::String { "xmtp.xmtpv4.metadata_api.GetPayerInfoResponse.PayerInfo".into() }fn type_url() -> ::prost::alloc::string::String { "/xmtp.xmtpv4.metadata_api.GetPayerInfoResponse.PayerInfo".into() }}
}
impl ::prost::Name for GetPayerInfoResponse {
const NAME: &'static str = "GetPayerInfoResponse";
const PACKAGE: &'static str = "xmtp.xmtpv4.metadata_api";
fn full_name() -> ::prost::alloc::string::String { "xmtp.xmtpv4.metadata_api.GetPayerInfoResponse".into() }fn type_url() -> ::prost::alloc::string::String { "/xmtp.xmtpv4.metadata_api.GetPayerInfoResponse".into() }}
/// Whether to group spend by hour or day
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum PayerInfoGranularity {
    Unspecified = 0,
    Hour = 1,
    Day = 2,
}
impl PayerInfoGranularity {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            PayerInfoGranularity::Unspecified => "PAYER_INFO_GRANULARITY_UNSPECIFIED",
            PayerInfoGranularity::Hour => "PAYER_INFO_GRANULARITY_HOUR",
            PayerInfoGranularity::Day => "PAYER_INFO_GRANULARITY_DAY",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "PAYER_INFO_GRANULARITY_UNSPECIFIED" => Some(Self::Unspecified),
            "PAYER_INFO_GRANULARITY_HOUR" => Some(Self::Hour),
            "PAYER_INFO_GRANULARITY_DAY" => Some(Self::Day),
            _ => None,
        }
    }
}
/// Encoded file descriptor set for the `xmtp.xmtpv4.metadata_api` package
pub const FILE_DESCRIPTOR_SET: &[u8] = &[
    0x0a, 0xcd, 0x1d, 0x0a, 0x26, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2f, 0x6d, 0x65, 0x74, 0x61,
    0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
    0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x78, 0x6d, 0x74,
    0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
    0x61, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
    0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
    0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2f, 0x65, 0x6e, 0x76, 0x65,
    0x6c, 0x6f, 0x70, 0x65, 0x73, 0x2f, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x73, 0x2e,
    0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63,
    0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a,
    0x15, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65,
    0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
    0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x78, 0x6d,
    0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
    0x70, 0x65, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65,
    0x73, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
    0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x47,
    0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
    0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
    0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x13,
    0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
    0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
    0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61,
    0x79, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0b,
    0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
    0x0e, 0x32, 0x2e, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e,
    0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x79,
    0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74,
    0x79, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x22, 0x8c,
    0x04, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
    0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72,
    0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x78, 0x6d,
    0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
    0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49,
    0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x65,
    0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65,
    0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa7, 0x01, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
    0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
    0x74, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x69, 0x63, 0x6f, 0x64, 0x6f, 0x6c, 0x6c,
    0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
    0x74, 0x53, 0x70, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x63, 0x6f, 0x64, 0x6f, 0x6c, 0x6c, 0x61, 0x72,
    0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
    0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x4d, 0x65, 0x73, 0x73,
    0x61, 0x67, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73,
    0x74, 0x61, 0x72, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
    0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53,
    0x74, 0x61, 0x72, 0x74, 0x55, 0x6e, 0x69, 0x78, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x1a,
    0x74, 0x0a, 0x09, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x67, 0x0a, 0x10,
    0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73,
    0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d,
    0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70,
    0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
    0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x75, 0x6d,
    0x6d, 0x61, 0x72, 0x79, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x75, 0x6d, 0x6d,
    0x61, 0x72, 0x69, 0x65, 0x73, 0x1a, 0x76, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
    0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
    0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x4e, 0x0a, 0x05, 0x76, 0x61, 0x6c,
    0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e,
    0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
    0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
    0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
    0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x7f, 0x0a,
    0x14, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c,
    0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x22, 0x50, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x49,
    0x4e, 0x46, 0x4f, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x55, 0x4c, 0x41, 0x52, 0x49, 0x54, 0x59, 0x5f,
    0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a,
    0x1b, 0x50, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x47, 0x52, 0x41, 0x4e,
    0x55, 0x4c, 0x41, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x4f, 0x55, 0x52, 0x10, 0x01, 0x12, 0x1e,
    0x0a, 0x1a, 0x50, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x47, 0x52, 0x41,
    0x4e, 0x55, 0x4c, 0x41, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x02, 0x32, 0x86,
    0x05, 0x0a, 0x0b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x70, 0x69, 0x12, 0x9d,
    0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
    0x12, 0x2e, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d,
    0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53,
    0x79, 0x6e, 0x63, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
    0x1a, 0x2f, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d,
    0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53,
    0x79, 0x6e, 0x63, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
    0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x6d,
    0x6c, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x67,
    0x65, 0x74, 0x2d, 0x73, 0x79, 0x6e, 0x63, 0x2d, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0xab,
    0x01, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x79, 0x6e, 0x63,
    0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x2e, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d,
    0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70,
    0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52,
    0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d,
    0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70,
    0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52,
    0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a,
    0x01, 0x2a, 0x22, 0x26, 0x2f, 0x6d, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x65, 0x74, 0x61,
    0x64, 0x61, 0x74, 0x61, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2d, 0x73,
    0x79, 0x6e, 0x63, 0x2d, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x30, 0x01, 0x12, 0x8c, 0x01, 0x0a,
    0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x78, 0x6d,
    0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
    0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
    0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x2e,
    0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
    0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
    0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01,
    0x2a, 0x22, 0x18, 0x2f, 0x6d, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
    0x61, 0x74, 0x61, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x99, 0x01, 0x0a, 0x0c,
    0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x2e, 0x78,
    0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64,
    0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72,
    0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x78, 0x6d,
    0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
    0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49,
    0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
    0x93, 0x02, 0x24, 0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x6d, 0x6c, 0x73, 0x2f, 0x76, 0x32, 0x2f,
    0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x67, 0x65, 0x74, 0x2d, 0x70, 0x61, 0x79,
    0x65, 0x72, 0x2d, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0xdf, 0x01, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e,
    0x78, 0x6d, 0x74, 0x70, 0x2e, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x2e, 0x6d, 0x65, 0x74, 0x61,
    0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x42, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
    0x74, 0x61, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69,
    0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x6d, 0x74, 0x70, 0x2f, 0x70, 0x72,
    0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x67, 0x6f, 0x2f, 0x78, 0x6d, 0x74, 0x70, 0x76, 0x34,
    0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03,
    0x58, 0x58, 0x4d, 0xaa, 0x02, 0x17, 0x58, 0x6d, 0x74, 0x70, 0x2e, 0x58, 0x6d, 0x74, 0x70, 0x76,
    0x34, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x70, 0x69, 0xca, 0x02, 0x17,
    0x58, 0x6d, 0x74, 0x70, 0x5c, 0x58, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x5c, 0x4d, 0x65, 0x74, 0x61,
    0x64, 0x61, 0x74, 0x61, 0x41, 0x70, 0x69, 0xe2, 0x02, 0x23, 0x58, 0x6d, 0x74, 0x70, 0x5c, 0x58,
    0x6d, 0x74, 0x70, 0x76, 0x34, 0x5c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x70,
    0x69, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19,
    0x58, 0x6d, 0x74, 0x70, 0x3a, 0x3a, 0x58, 0x6d, 0x74, 0x70, 0x76, 0x34, 0x3a, 0x3a, 0x4d, 0x65,
    0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x70, 0x69, 0x4a, 0xfc, 0x0d, 0x0a, 0x06, 0x12, 0x04,
    0x01, 0x00, 0x52, 0x01, 0x0a, 0x18, 0x0a, 0x01, 0x0c, 0x12, 0x03, 0x01, 0x00, 0x12, 0x1a, 0x0e,
    0x20, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x41, 0x50, 0x49, 0x0a, 0x0a, 0x08,
    0x0a, 0x01, 0x02, 0x12, 0x03, 0x03, 0x00, 0x21, 0x0a, 0x09, 0x0a, 0x02, 0x03, 0x00, 0x12, 0x03,
    0x05, 0x00, 0x26, 0x0a, 0x09, 0x0a, 0x02, 0x03, 0x01, 0x12, 0x03, 0x06, 0x00, 0x2a, 0x0a, 0x08,
    0x0a, 0x01, 0x08, 0x12, 0x03, 0x08, 0x00, 0x46, 0x0a, 0x09, 0x0a, 0x02, 0x08, 0x0b, 0x12, 0x03,
    0x08, 0x00, 0x46, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x00, 0x12, 0x04, 0x0a, 0x00, 0x0b, 0x01, 0x0a,
    0x0a, 0x0a, 0x03, 0x04, 0x00, 0x01, 0x12, 0x03, 0x0a, 0x08, 0x1c, 0x0a, 0x0a, 0x0a, 0x02, 0x04,
    0x01, 0x12, 0x04, 0x0d, 0x00, 0x0f, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x01, 0x01, 0x12, 0x03,
    0x0d, 0x08, 0x1d, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x01, 0x02, 0x00, 0x12, 0x03, 0x0e, 0x02, 0x2f,
    0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x01, 0x02, 0x00, 0x06, 0x12, 0x03, 0x0e, 0x02, 0x1e, 0x0a, 0x0c,
    0x0a, 0x05, 0x04, 0x01, 0x02, 0x00, 0x01, 0x12, 0x03, 0x0e, 0x1f, 0x2a, 0x0a, 0x0c, 0x0a, 0x05,
    0x04, 0x01, 0x02, 0x00, 0x03, 0x12, 0x03, 0x0e, 0x2d, 0x2e, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x02,
    0x12, 0x04, 0x11, 0x00, 0x12, 0x01, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x02, 0x01, 0x12, 0x03, 0x11,
    0x08, 0x19, 0x0a, 0x0a, 0x0a, 0x02, 0x04, 0x03, 0x12, 0x04, 0x14, 0x00, 0x16, 0x01, 0x0a, 0x0a,
    0x0a, 0x03, 0x04, 0x03, 0x01, 0x12, 0x03, 0x14, 0x08, 0x1a, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x03,
    0x02, 0x00, 0x12, 0x03, 0x15, 0x02, 0x15, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x03, 0x02, 0x00, 0x05,
    0x12, 0x03, 0x15, 0x02, 0x08, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x03, 0x02, 0x00, 0x01, 0x12, 0x03,
    0x15, 0x09, 0x10, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x03, 0x02, 0x00, 0x03, 0x12, 0x03, 0x15, 0x13,
    0x14, 0x0a, 0x33, 0x0a, 0x02, 0x05, 0x00, 0x12, 0x04, 0x19, 0x00, 0x1d, 0x01, 0x1a, 0x27, 0x20,
    0x57, 0x68, 0x65, 0x74, 0x68, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70,
    0x20, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x20, 0x62, 0x79, 0x20, 0x68, 0x6f, 0x75, 0x72, 0x20, 0x6f,
    0x72, 0x20, 0x64, 0x61, 0x79, 0x0a, 0x0a, 0x0a, 0x0a, 0x03, 0x05, 0x00, 0x01, 0x12, 0x03, 0x19,
    0x05, 0x19, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x00, 0x02, 0x00, 0x12, 0x03, 0x1a, 0x02, 0x29, 0x0a,
    0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02, 0x00, 0x01, 0x12, 0x03, 0x1a, 0x02, 0x24, 0x0a, 0x0c, 0x0a,
    0x05, 0x05, 0x00, 0x02, 0x00, 0x02, 0x12, 0x03, 0x1a, 0x27, 0x28, 0x0a, 0x0b, 0x0a, 0x04, 0x05,
    0x00, 0x02, 0x01, 0x12, 0x03, 0x1b, 0x02, 0x22, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02, 0x01,
    0x01, 0x12, 0x03, 0x1b, 0x02, 0x1d, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02, 0x01, 0x02, 0x12,
    0x03, 0x1b, 0x20, 0x21, 0x0a, 0x0b, 0x0a, 0x04, 0x05, 0x00, 0x02, 0x02, 0x12, 0x03, 0x1c, 0x02,
    0x21, 0x0a, 0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02, 0x02, 0x01, 0x12, 0x03, 0x1c, 0x02, 0x1c, 0x0a,
    0x0c, 0x0a, 0x05, 0x05, 0x00, 0x02, 0x02, 0x02, 0x12, 0x03, 0x1c, 0x1f, 0x20, 0x0a, 0x5a, 0x0a,
    0x02, 0x04, 0x04, 0x12, 0x04, 0x20, 0x00, 0x23, 0x01, 0x1a, 0x4e, 0x20, 0x47, 0x65, 0x74, 0x20,
    0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x61, 0x62, 0x6f, 0x75,
    0x74, 0x20, 0x70, 0x61, 0x79, 0x65, 0x72, 0x20, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x20, 0x61, 0x6e,
    0x64, 0x20, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x20, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
    0x20, 0x66, 0x6f, 0x72, 0x20, 0x61, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x20, 0x74, 0x69, 0x6d,
    0x65, 0x20, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x0a, 0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x04, 0x01,
    0x12, 0x03, 0x20, 0x08, 0x1b, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x04, 0x02, 0x00, 0x12, 0x03, 0x21,
    0x02, 0x26, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02, 0x00, 0x04, 0x12, 0x03, 0x21, 0x02, 0x0a,
    0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02, 0x00, 0x05, 0x12, 0x03, 0x21, 0x0b, 0x11, 0x0a, 0x0c,
    0x0a, 0x05, 0x04, 0x04, 0x02, 0x00, 0x01, 0x12, 0x03, 0x21, 0x12, 0x21, 0x0a, 0x0c, 0x0a, 0x05,
    0x04, 0x04, 0x02, 0x00, 0x03, 0x12, 0x03, 0x21, 0x24, 0x25, 0x0a, 0x0b, 0x0a, 0x04, 0x04, 0x04,
    0x02, 0x01, 0x12, 0x03, 0x22, 0x02, 0x27, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02, 0x01, 0x06,
    0x12, 0x03, 0x22, 0x02, 0x16, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02, 0x01, 0x01, 0x12, 0x03,
    0x22, 0x17, 0x22, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x04, 0x02, 0x01, 0x03, 0x12, 0x03, 0x22, 0x25,
    0x26, 0x0a, 0x2d, 0x0a, 0x02, 0x04, 0x05, 0x12, 0x04, 0x26, 0x00, 0x33, 0x01, 0x1a, 0x21, 0x20,
    0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x20, 0x74, 0x6f, 0x20, 0x47, 0x65, 0x74, 0x50,
    0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x0a,
    0x0a, 0x0a, 0x0a, 0x03, 0x04, 0x05, 0x01, 0x12, 0x03, 0x26, 0x08, 0x1c, 0x0a, 0x0c, 0x0a, 0x04,
    0x04, 0x05, 0x03, 0x00, 0x12, 0x04, 0x27, 0x02, 0x2b, 0x03, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x05,
    0x03, 0x00, 0x01, 0x12, 0x03, 0x27, 0x0a, 0x17, 0x0a, 0x0d, 0x0a, 0x06, 0x04, 0x05, 0x03, 0x00,
    0x02, 0x00, 0x12, 0x03, 0x28, 0x04, 0x28, 0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x00, 0x02,
    0x00, 0x05, 0x12, 0x03, 0x28, 0x04, 0x0a, 0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x00, 0x02,
    0x00, 0x01, 0x12, 0x03, 0x28, 0x0b, 0x23, 0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x00, 0x02,
    0x00, 0x03, 0x12, 0x03, 0x28, 0x26, 0x27, 0x0a, 0x0d, 0x0a, 0x06, 0x04, 0x05, 0x03, 0x00, 0x02,
    0x01, 0x12, 0x03, 0x29, 0x04, 0x1c, 0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x00, 0x02, 0x01,
    0x05, 0x12, 0x03, 0x29, 0x04, 0x0a, 0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x00, 0x02, 0x01,
    0x01, 0x12, 0x03, 0x29, 0x0b, 0x17, 0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x00, 0x02, 0x01,
    0x03, 0x12, 0x03, 0x29, 0x1a, 0x1b, 0x0a, 0x0d, 0x0a, 0x06, 0x04, 0x05, 0x03, 0x00, 0x02, 0x02,
    0x12, 0x03, 0x2a, 0x04, 0x29, 0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x00, 0x02, 0x02, 0x05,
    0x12, 0x03, 0x2a, 0x04, 0x0a, 0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x00, 0x02, 0x02, 0x01,
    0x12, 0x03, 0x2a, 0x0b, 0x24, 0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x00, 0x02, 0x02, 0x03,
    0x12, 0x03, 0x2a, 0x27, 0x28, 0x0a, 0x0c, 0x0a, 0x04, 0x04, 0x05, 0x03, 0x01, 0x12, 0x04, 0x2d,
    0x02, 0x2f, 0x03, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x05, 0x03, 0x01, 0x01, 0x12, 0x03, 0x2d, 0x0a,
    0x13, 0x0a, 0x0d, 0x0a, 0x06, 0x04, 0x05, 0x03, 0x01, 0x02, 0x00, 0x12, 0x03, 0x2e, 0x04, 0x30,
    0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x01, 0x02, 0x00, 0x04, 0x12, 0x03, 0x2e, 0x04, 0x0c,
    0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x01, 0x02, 0x00, 0x06, 0x12, 0x03, 0x2e, 0x0d, 0x1a,
    0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x01, 0x02, 0x00, 0x01, 0x12, 0x03, 0x2e, 0x1b, 0x2b,
    0x0a, 0x0e, 0x0a, 0x07, 0x04, 0x05, 0x03, 0x01, 0x02, 0x00, 0x03, 0x12, 0x03, 0x2e, 0x2e, 0x2f,
    0x0a, 0x23, 0x0a, 0x04, 0x04, 0x05, 0x02, 0x00, 0x12, 0x03, 0x32, 0x02, 0x28, 0x1a, 0x16, 0x20,
    0x4d, 0x61, 0x70, 0x20, 0x6f, 0x66, 0x20, 0x70, 0x61, 0x79, 0x65, 0x72, 0x20, 0x61, 0x64, 0x64,
    0x72, 0x65, 0x73, 0x73, 0x0a, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x05, 0x02, 0x00, 0x06, 0x12, 0x03,
    0x32, 0x02, 0x18, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x05, 0x02, 0x00, 0x01, 0x12, 0x03, 0x32, 0x19,
    0x23, 0x0a, 0x0c, 0x0a, 0x05, 0x04, 0x05, 0x02, 0x00, 0x03, 0x12, 0x03, 0x32, 0x26, 0x27, 0x0a,
    0x4d, 0x0a, 0x02, 0x06, 0x00, 0x12, 0x04, 0x36, 0x00, 0x52, 0x01, 0x1a, 0x41, 0x20, 0x4d, 0x65,
    0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x64, 0x69, 0x73, 0x74, 0x72,
    0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x20, 0x74, 0x72, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x2c, 0x20,
    0x64, 0x65, 0x62, 0x75, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x79,
    0x6e, 0x63, 0x68, 0x72, 0x6f, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x0a, 0x0a, 0x0a,
    0x0a, 0x03, 0x06, 0x00, 0x01, 0x12, 0x03, 0x36, 0x08, 0x13, 0x0a, 0x0c, 0x0a, 0x04, 0x06, 0x00,
    0x02, 0x00, 0x12, 0x04, 0x37, 0x02, 0x3c, 0x03, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x00,
    0x01, 0x12, 0x03, 0x37, 0x06, 0x13, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x00, 0x02, 0x12,
    0x03, 0x37, 0x14, 0x28, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x00, 0x03, 0x12, 0x03, 0x37,
    0x33, 0x48, 0x0a, 0x0d, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x00, 0x04, 0x12, 0x04, 0x38, 0x04, 0x3b,
    0x06, 0x0a, 0x11, 0x0a, 0x09, 0x06, 0x00, 0x02, 0x00, 0x04, 0xb0, 0xca, 0xbc, 0x22, 0x12, 0x04,
    0x38, 0x04, 0x3b, 0x06, 0x0a, 0x11, 0x0a, 0x0a, 0x06, 0x00, 0x02, 0x00, 0x04, 0xb0, 0xca, 0xbc,
    0x22, 0x04, 0x12, 0x03, 0x39, 0x06, 0x2e, 0x0a, 0x11, 0x0a, 0x0a, 0x06, 0x00, 0x02, 0x00, 0x04,
    0xb0, 0xca, 0xbc, 0x22, 0x07, 0x12, 0x03, 0x3a, 0x06, 0x0f, 0x0a, 0x0c, 0x0a, 0x04, 0x06, 0x00,
    0x02, 0x01, 0x12, 0x04, 0x3e, 0x02, 0x43, 0x03, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x01,
    0x01, 0x12, 0x03, 0x3e, 0x06, 0x19, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x01, 0x02, 0x12,
    0x03, 0x3e, 0x1a, 0x2e, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x01, 0x06, 0x12, 0x03, 0x3e,
    0x39, 0x3f, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x01, 0x03, 0x12, 0x03, 0x3e, 0x40, 0x55,
    0x0a, 0x0d, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x01, 0x04, 0x12, 0x04, 0x3f, 0x04, 0x42, 0x06, 0x0a,
    0x11, 0x0a, 0x09, 0x06, 0x00, 0x02, 0x01, 0x04, 0xb0, 0xca, 0xbc, 0x22, 0x12, 0x04, 0x3f, 0x04,
    0x42, 0x06, 0x0a, 0x11, 0x0a, 0x0a, 0x06, 0x00, 0x02, 0x01, 0x04, 0xb0, 0xca, 0xbc, 0x22, 0x04,
    0x12, 0x03, 0x40, 0x06, 0x34, 0x0a, 0x11, 0x0a, 0x0a, 0x06, 0x00, 0x02, 0x01, 0x04, 0xb0, 0xca,
    0xbc, 0x22, 0x07, 0x12, 0x03, 0x41, 0x06, 0x0f, 0x0a, 0x0c, 0x0a, 0x04, 0x06, 0x00, 0x02, 0x02,
    0x12, 0x04, 0x45, 0x02, 0x4a, 0x03, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x02, 0x01, 0x12,
    0x03, 0x45, 0x06, 0x10, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x02, 0x02, 0x12, 0x03, 0x45,
    0x11, 0x22, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x02, 0x03, 0x12, 0x03, 0x45, 0x2d, 0x3f,
    0x0a, 0x0d, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x02, 0x04, 0x12, 0x04, 0x46, 0x04, 0x49, 0x06, 0x0a,
    0x11, 0x0a, 0x09, 0x06, 0x00, 0x02, 0x02, 0x04, 0xb0, 0xca, 0xbc, 0x22, 0x12, 0x04, 0x46, 0x04,
    0x49, 0x06, 0x0a, 0x11, 0x0a, 0x0a, 0x06, 0x00, 0x02, 0x02, 0x04, 0xb0, 0xca, 0xbc, 0x22, 0x04,
    0x12, 0x03, 0x47, 0x06, 0x26, 0x0a, 0x11, 0x0a, 0x0a, 0x06, 0x00, 0x02, 0x02, 0x04, 0xb0, 0xca,
    0xbc, 0x22, 0x07, 0x12, 0x03, 0x48, 0x06, 0x0f, 0x0a, 0x0c, 0x0a, 0x04, 0x06, 0x00, 0x02, 0x03,
    0x12, 0x04, 0x4c, 0x02, 0x51, 0x03, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x03, 0x01, 0x12,
    0x03, 0x4c, 0x06, 0x12, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x03, 0x02, 0x12, 0x03, 0x4c,
    0x13, 0x26, 0x0a, 0x0c, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x03, 0x03, 0x12, 0x03, 0x4c, 0x31, 0x45,
    0x0a, 0x0d, 0x0a, 0x05, 0x06, 0x00, 0x02, 0x03, 0x04, 0x12, 0x04, 0x4d, 0x04, 0x50, 0x06, 0x0a,
    0x11, 0x0a, 0x09, 0x06, 0x00, 0x02, 0x03, 0x04, 0xb0, 0xca, 0xbc, 0x22, 0x12, 0x04, 0x4d, 0x04,
    0x50, 0x06, 0x0a, 0x11, 0x0a, 0x0a, 0x06, 0x00, 0x02, 0x03, 0x04, 0xb0, 0xca, 0xbc, 0x22, 0x04,
    0x12, 0x03, 0x4e, 0x06, 0x2d, 0x0a, 0x11, 0x0a, 0x0a, 0x06, 0x00, 0x02, 0x03, 0x04, 0xb0, 0xca,
    0xbc, 0x22, 0x07, 0x12, 0x03, 0x4f, 0x06, 0x0f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
];
include!("xmtp.xmtpv4.metadata_api.serde.rs");
include!("xmtp.xmtpv4.metadata_api.tonic.rs");
// @@protoc_insertion_point(module)