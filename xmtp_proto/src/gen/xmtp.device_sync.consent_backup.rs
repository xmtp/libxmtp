// This file is @generated by prost-build.
/// Proto representation of a consent record save
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ConsentSave {
    #[prost(enumeration = "ConsentTypeSave", tag = "1")]
    pub entity_type: i32,
    #[prost(enumeration = "ConsentStateSave", tag = "2")]
    pub state: i32,
    #[prost(string, tag = "3")]
    pub entity: ::prost::alloc::string::String,
    #[prost(int64, tag = "4")]
    pub consented_at_ns: i64,
}
impl ::prost::Name for ConsentSave {
    const NAME: &'static str = "ConsentSave";
    const PACKAGE: &'static str = "xmtp.device_sync.consent_backup";
    fn full_name() -> ::prost::alloc::string::String {
        "xmtp.device_sync.consent_backup.ConsentSave".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/xmtp.device_sync.consent_backup.ConsentSave".into()
    }
}
/// Consent record type
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ConsentTypeSave {
    Unspecified = 0,
    ConversationId = 1,
    InboxId = 2,
    Address = 3,
}
impl ConsentTypeSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "CONSENT_TYPE_SAVE_UNSPECIFIED",
            Self::ConversationId => "CONSENT_TYPE_SAVE_CONVERSATION_ID",
            Self::InboxId => "CONSENT_TYPE_SAVE_INBOX_ID",
            Self::Address => "CONSENT_TYPE_SAVE_ADDRESS",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CONSENT_TYPE_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "CONSENT_TYPE_SAVE_CONVERSATION_ID" => Some(Self::ConversationId),
            "CONSENT_TYPE_SAVE_INBOX_ID" => Some(Self::InboxId),
            "CONSENT_TYPE_SAVE_ADDRESS" => Some(Self::Address),
            _ => None,
        }
    }
}
/// Consent record state
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ConsentStateSave {
    Unspecified = 0,
    Unknown = 1,
    Allowed = 2,
    Denied = 3,
}
impl ConsentStateSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "CONSENT_STATE_SAVE_UNSPECIFIED",
            Self::Unknown => "CONSENT_STATE_SAVE_UNKNOWN",
            Self::Allowed => "CONSENT_STATE_SAVE_ALLOWED",
            Self::Denied => "CONSENT_STATE_SAVE_DENIED",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CONSENT_STATE_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "CONSENT_STATE_SAVE_UNKNOWN" => Some(Self::Unknown),
            "CONSENT_STATE_SAVE_ALLOWED" => Some(Self::Allowed),
            "CONSENT_STATE_SAVE_DENIED" => Some(Self::Denied),
            _ => None,
        }
    }
}
