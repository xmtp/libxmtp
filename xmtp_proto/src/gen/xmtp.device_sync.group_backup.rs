// This file is @generated by prost-build.
/// Proto representation of a stored group
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GroupSave {
    #[prost(bytes = "vec", tag = "1")]
    pub id: ::prost::alloc::vec::Vec<u8>,
    #[prost(int64, tag = "2")]
    pub created_at_ns: i64,
    #[prost(enumeration = "GroupMembershipStateSave", tag = "3")]
    pub membership_state: i32,
    #[prost(int64, tag = "4")]
    pub installations_last_checked: i64,
    #[prost(string, tag = "5")]
    pub added_by_inbox_id: ::prost::alloc::string::String,
    #[prost(int64, optional, tag = "6")]
    pub welcome_id: ::core::option::Option<i64>,
    #[prost(int64, tag = "7")]
    pub rotated_at_ns: i64,
    #[prost(enumeration = "ConversationTypeSave", tag = "8")]
    pub conversation_type: i32,
    #[prost(string, optional, tag = "9")]
    pub dm_id: ::core::option::Option<::prost::alloc::string::String>,
    #[prost(int64, optional, tag = "10")]
    pub last_message_ns: ::core::option::Option<i64>,
    #[prost(int64, optional, tag = "11")]
    pub message_disappear_from_ns: ::core::option::Option<i64>,
    #[prost(int64, optional, tag = "12")]
    pub message_disappear_in_ns: ::core::option::Option<i64>,
    /// metadata fields
    #[prost(message, optional, tag = "13")]
    pub metadata: ::core::option::Option<ImmutableMetadataSave>,
    #[prost(message, optional, tag = "14")]
    pub mutable_metadata: ::core::option::Option<MutableMetadataSave>,
    #[prost(string, optional, tag = "15")]
    pub paused_for_version: ::core::option::Option<::prost::alloc::string::String>,
}
impl ::prost::Name for GroupSave {
    const NAME: &'static str = "GroupSave";
    const PACKAGE: &'static str = "xmtp.device_sync.group_backup";
    fn full_name() -> ::prost::alloc::string::String {
        "xmtp.device_sync.group_backup.GroupSave".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/xmtp.device_sync.group_backup.GroupSave".into()
    }
}
/// A Groups's mutable metadata
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct MutableMetadataSave {
    #[prost(map = "string, string", tag = "1")]
    pub attributes: ::std::collections::HashMap<
        ::prost::alloc::string::String,
        ::prost::alloc::string::String,
    >,
    #[prost(string, repeated, tag = "2")]
    pub admin_list: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(string, repeated, tag = "3")]
    pub super_admin_list: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
impl ::prost::Name for MutableMetadataSave {
    const NAME: &'static str = "MutableMetadataSave";
    const PACKAGE: &'static str = "xmtp.device_sync.group_backup";
    fn full_name() -> ::prost::alloc::string::String {
        "xmtp.device_sync.group_backup.MutableMetadataSave".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/xmtp.device_sync.group_backup.MutableMetadataSave".into()
    }
}
/// A Group's immutable metadata
#[derive(Clone, PartialEq, Eq, Hash, ::prost::Message)]
pub struct ImmutableMetadataSave {
    #[prost(string, tag = "1")]
    pub creator_inbox_id: ::prost::alloc::string::String,
}
impl ::prost::Name for ImmutableMetadataSave {
    const NAME: &'static str = "ImmutableMetadataSave";
    const PACKAGE: &'static str = "xmtp.device_sync.group_backup";
    fn full_name() -> ::prost::alloc::string::String {
        "xmtp.device_sync.group_backup.ImmutableMetadataSave".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/xmtp.device_sync.group_backup.ImmutableMetadataSave".into()
    }
}
/// Group membership state
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum GroupMembershipStateSave {
    Unspecified = 0,
    Allowed = 1,
    Rejected = 2,
    Pending = 3,
    /// A group is marked as this state when it is restored
    /// from a backup. This is a non-functional archive state
    /// that can be reactivated when the user is re-added to
    /// the group.
    Restored = 4,
}
impl GroupMembershipStateSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "GROUP_MEMBERSHIP_STATE_SAVE_UNSPECIFIED",
            Self::Allowed => "GROUP_MEMBERSHIP_STATE_SAVE_ALLOWED",
            Self::Rejected => "GROUP_MEMBERSHIP_STATE_SAVE_REJECTED",
            Self::Pending => "GROUP_MEMBERSHIP_STATE_SAVE_PENDING",
            Self::Restored => "GROUP_MEMBERSHIP_STATE_SAVE_RESTORED",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "GROUP_MEMBERSHIP_STATE_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "GROUP_MEMBERSHIP_STATE_SAVE_ALLOWED" => Some(Self::Allowed),
            "GROUP_MEMBERSHIP_STATE_SAVE_REJECTED" => Some(Self::Rejected),
            "GROUP_MEMBERSHIP_STATE_SAVE_PENDING" => Some(Self::Pending),
            "GROUP_MEMBERSHIP_STATE_SAVE_RESTORED" => Some(Self::Restored),
            _ => None,
        }
    }
}
/// Conversation type
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum ConversationTypeSave {
    Unspecified = 0,
    Group = 1,
    Dm = 2,
    Sync = 3,
}
impl ConversationTypeSave {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unspecified => "CONVERSATION_TYPE_SAVE_UNSPECIFIED",
            Self::Group => "CONVERSATION_TYPE_SAVE_GROUP",
            Self::Dm => "CONVERSATION_TYPE_SAVE_DM",
            Self::Sync => "CONVERSATION_TYPE_SAVE_SYNC",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CONVERSATION_TYPE_SAVE_UNSPECIFIED" => Some(Self::Unspecified),
            "CONVERSATION_TYPE_SAVE_GROUP" => Some(Self::Group),
            "CONVERSATION_TYPE_SAVE_DM" => Some(Self::Dm),
            "CONVERSATION_TYPE_SAVE_SYNC" => Some(Self::Sync),
            _ => None,
        }
    }
}
