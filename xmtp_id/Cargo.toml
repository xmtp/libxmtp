[package]
edition = "2021"
license.workspace = true
name = "xmtp_id"
version.workspace = true

[lints.clippy]
uninlined_format_args = "allow"

[package.metadata.docs.rs]
targets = [
  "x86_64-unknown-linux-gnu",
  "wasm32-unknown-unknown",
  "aarch64-apple-darwin",
]

[dependencies]
alloy = { workspace = true, features = ["sol-types", "reqwest"] }
async-trait.workspace = true
base64.workspace = true
chrono.workspace = true
ed25519-dalek = { workspace = true, features = ["digest"] }
futures.workspace = true
hex.workspace = true
openmls_traits.workspace = true
p256.workspace = true
prost.workspace = true
regex.workspace = true
serde.workspace = true
serde_json.workspace = true
sha2.workspace = true
thiserror.workspace = true
tracing.workspace = true
url = { workspace = true, features = ["serde"] }
xmtp_api = { workspace = true }
xmtp_common.workspace = true
xmtp_cryptography.workspace = true
xmtp_db.workspace = true
xmtp_proto = { workspace = true, features = ["proto_full"] }

rstest = { workspace = true, optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { workspace = true }
openmls = { workspace = true, features = ["js"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
openmls.workspace = true

[dev-dependencies]
alloy = { workspace = true, features = [
  "sol-types",
  "providers",
  "reqwest",
  "rpc",
  "rpc-types",
  "network",
  "json",
  "provider-anvil-api",
  "provider-anvil-node",
  "contract",
  "rand",
] }
ed25519-dalek = { workspace = true, features = ["digest", "rand_core"] }
rstest.workspace = true
tokio = { workspace = true, features = ["macros"] }
wasm-bindgen-test.workspace = true
xmtp_common = { workspace = true, features = ["test-utils"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
gloo-timers.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
ctor.workspace = true

[features]
test-utils = [
  "xmtp_common/test-utils",
  "dep:rstest",
  "alloy/json",
  "alloy/provider-anvil-api",
  "alloy/provider-anvil-node",
  "alloy/contract",
  "alloy/rand",
]
