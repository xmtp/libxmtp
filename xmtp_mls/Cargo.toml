[package]
edition = "2021"
name = "xmtp_mls"
version.workspace = true

[[bin]]
doc = false
name = "update-schema"
path = "src/bin/update-schema.rs"

[features]
bench = [
    "test-utils",
    "indicatif",
    "tracing-subscriber",
    "anyhow",
    "tracing-flame",
    "once_cell",
    "xmtp_api_grpc",
]
default = ["native"]
http-api = ["xmtp_api_http"]
native = ["libsqlite3-sys/bundled-sqlcipher-vendored-openssl", "xmtp_api_grpc"]
test-utils = ["xmtp_id/test-utils"]

[dependencies]
aes-gcm = { version = "0.10.3", features = ["std"] }
async-stream.workspace = true
trait-variant.workspace = true
bincode = "1.3.3"
diesel = { version = "2.2.2", features = [
    "sqlite",
    "r2d2",
    "returning_clauses_for_sqlite_3_35",
] }
diesel_migrations = { version = "2.2.0", features = ["sqlite"] }
ed25519-dalek = "2.1.1"
futures.workspace = true
hex.workspace = true
libsqlite3-sys = { version = "0.29.0", optional = true }
log.workspace = true
openmls = { workspace = true, features = ["test-utils"] }
openmls_basic_credential = { workspace = true }
openmls_rust_crypto = { workspace = true }
openmls_traits = { workspace = true }
parking_lot = "0.12.3"
prost = { workspace = true, features = ["prost-derive"] }
rand = { workspace = true }
reqwest = { version = "0.12.4", features = ["stream"] }
serde = { workspace = true }
serde_json.workspace = true
sha2.workspace = true
thiserror = { workspace = true }
tls_codec = { workspace = true }
tokio = { workspace = true, features = [
    "macros",
    "rt-multi-thread",
    "tracing",
] }
tokio-stream = { version = "0.1", features = ["sync"] }
toml = "0.8.4"
tracing.workspace = true
xmtp_cryptography = { workspace = true }
xmtp_id = { path = "../xmtp_id" }
xmtp_proto = { workspace = true, features = ["proto_full", "convert"] }

# Test/Bench Utils
anyhow = { workspace = true, optional = true }
indicatif = { version = "0.17", optional = true }
once_cell = { version = "1.19", optional = true }
tracing-flame = { version = "0.2", optional = true }
tracing-subscriber = { workspace = true, optional = true }
xmtp_api_grpc = { path = "../xmtp_api_grpc", optional = true }
xmtp_api_http = { path = "../xmtp_api_http", optional = true }

[dev-dependencies]
anyhow.workspace = true
async-barrier = "1.1"
criterion = { version = "0.5", features = ["html_reports", "async_tokio"] }
ctor.workspace = true
mockall = "0.13.0"
mockito = "1.4.0"
tempfile = "3.5.0"
tracing-log = "0.2.0"
tracing-subscriber.workspace = true
tracing-test = "0.2.4"
tracing.workspace = true
xmtp_api_grpc = { path = "../xmtp_api_grpc" }
xmtp_id = { path = "../xmtp_id", features = ["test-utils"] }
ethers.workspace = true

[[bench]]
harness = false
name = "group_limit"

[[bench]]
harness = false
name = "crypto"
